buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.0"
group= "net.orekyuu.rabbithouse"
archivesBaseName = "rabbithouse"
forgeVersion = "1.7.2-10.12.2.1121"

minecraft {
    version = forgeVersion
    assetDir = "eclipse/assets"
}

javadoc {
    options.encoding = "UTF-8"
    project.configure(options) {
        memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
        charSet = "UTF-8"
        docTitle = "Rabbit House"
        windowTitle = "Rabbit House"
        author = "true"
        use = "true"
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.2.4'
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task createBlock << {
    File blocksFile = file('src/main/resources/net/orekyuu/rabbithouse/block/Blocks.json')
    blocksFile.parentFile.mkdirs()
    if(blocksFile.createNewFile())
        println 'created Blocks.json.'
}

task readCvs << {
    forgeDir = project.getGradle().getGradleUserHomeDir().getAbsolutePath().replace('\\', '/') +
            '/caches/minecraft/net/minecraftforge/forge/'
    File fields = new File(forgeDir + forgeVersion + '/unpacked/conf/fields.csv')
    fields.eachLine{
        println it
    }
}

task initRabbitHouse << {
    println '======================'
    println 'Initialize RabbitHouse'
    println '======================'

    tasks.createBlock.execute()
}
[compileJava, compileTestJava].each{
    it.options.encoding = 'UTF-8'
    it.options.compilerArgs += ['-source', '1.7', '-target', '1.7']
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:${System.getProperty('user.home')}/public/.m2/repository")
        }
    }
}